package com.epic.agentbanking.model;
// Generated May 3, 2019 4:22:22 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Branch generated by hbm2java
 */
@Entity
@Table(name="branch"
    ,catalog="abdev01"
)
public class Branch  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 6439576479149284400L;
	private String branchprifix;
     private Status status;
     private Date createdtime;
     private String description;
     private Date lastupdatedtime;
     private String lastupdateduser;
     private String remarks;
     private Set<Agent> agents = new HashSet<Agent>(0);
     private Set<Usersbranch> usersbranches = new HashSet<Usersbranch>(0);
     private Set<Terminal> terminals = new HashSet<Terminal>(0);

    public Branch() {
    }

	
    public Branch(String branchprifix, Status status) {
        this.branchprifix = branchprifix;
        this.status = status;
    }
    public Branch(String branchprifix, Status status, Date createdtime, String description, Date lastupdatedtime, String lastupdateduser, String remarks, Set<Agent> agents, Set<Usersbranch> usersbranches, Set<Terminal> terminals) {
       this.branchprifix = branchprifix;
       this.status = status;
       this.createdtime = createdtime;
       this.description = description;
       this.lastupdatedtime = lastupdatedtime;
       this.lastupdateduser = lastupdateduser;
       this.remarks = remarks;
       this.agents = agents;
       this.usersbranches = usersbranches;
       this.terminals = terminals;
    }
   
     @Id 

    
    @Column(name="BRANCHPRIFIX", unique=true, nullable=false, length=16)
    public String getBranchprifix() {
        return this.branchprifix;
    }
    
    public void setBranchprifix(String branchprifix) {
        this.branchprifix = branchprifix;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

    
    @Column(name="DESCRIPTION", length=128)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    
    @Column(name="REMARKS", length=200)
    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="branch")
    public Set<Agent> getAgents() {
        return this.agents;
    }
    
    public void setAgents(Set<Agent> agents) {
        this.agents = agents;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="branch")
    public Set<Usersbranch> getUsersbranches() {
        return this.usersbranches;
    }
    
    public void setUsersbranches(Set<Usersbranch> usersbranches) {
        this.usersbranches = usersbranches;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="branch")
    public Set<Terminal> getTerminals() {
        return this.terminals;
    }
    
    public void setTerminals(Set<Terminal> terminals) {
        this.terminals = terminals;
    }




}


