package com.epic.agentbanking.model;
// Generated May 3, 2019 4:22:22 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Status generated by hbm2java
 */
@Entity
@Table(name="status"
    ,catalog="abdev01"
)
public class Status  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = -3957984794433381859L;
	private String statuscode;
     private Statuscategory statuscategory;
     private Date createdtime;
     private String description;
     private Date lastupdatedtime;
     private String lastupdateduser;
     private Short sortkey;
     private Set<Users> usersesForPasswordstatus = new HashSet<Users>(0);
     private Set<Passwordpolicy> passwordpolicies = new HashSet<Passwordpolicy>(0);
     private Set<Users> usersesForStatus = new HashSet<Users>(0);
     private Set<Cluster> clusters = new HashSet<Cluster>(0);
     private Set<Terminalmodel> terminalmodels = new HashSet<Terminalmodel>(0);
     private Set<Agentparam> agentparams = new HashSet<Agentparam>(0);
     private Set<Page> pages = new HashSet<Page>(0);
     private Set<Agentuserbatch> agentuserbatches = new HashSet<Agentuserbatch>(0);
     private Set<Unit> units = new HashSet<Unit>(0);
     private Set<Transactiontype> transactiontypes = new HashSet<Transactiontype>(0);
     private Set<Agent> agents = new HashSet<Agent>(0);
     private Set<Agentuser> agentusers = new HashSet<Agentuser>(0);
     private Set<Userrole> userroles = new HashSet<Userrole>(0);
     private Set<Section> sections = new HashSet<Section>(0);
     private Set<Member> members = new HashSet<Member>(0);
     private Set<Terminalversion> terminalversions = new HashSet<Terminalversion>(0);
     private Set<Userroletype> userroletypes = new HashSet<Userroletype>(0);
     private Set<Task> tasks = new HashSet<Task>(0);
     private Set<Transactionhistory> transactionhistories = new HashSet<Transactionhistory>(0);
     private Set<Tmpauthrec> tmpauthrecs = new HashSet<Tmpauthrec>(0);
     private Set<Transactions> transactionses = new HashSet<Transactions>(0);
     private Set<Agentcategory> agentcategories = new HashSet<Agentcategory>(0);
     private Set<Terminal> terminals = new HashSet<Terminal>(0);
     private Set<Branch> branches = new HashSet<Branch>(0);
     private Set<Group> groups = new HashSet<Group>(0);

    public Status() {
    }

	
    public Status(String statuscode) {
        this.statuscode = statuscode;
    }
    public Status(String statuscode, Statuscategory statuscategory, Date createdtime, String description, Date lastupdatedtime, String lastupdateduser, Short sortkey, Set<Users> usersesForPasswordstatus, Set<Passwordpolicy> passwordpolicies, Set<Users> usersesForStatus, Set<Cluster> clusters, Set<Terminalmodel> terminalmodels, Set<Agentparam> agentparams, Set<Page> pages, Set<Agentuserbatch> agentuserbatches, Set<Unit> units, Set<Transactiontype> transactiontypes, Set<Agent> agents, Set<Agentuser> agentusers, Set<Userrole> userroles, Set<Section> sections, Set<Member> members, Set<Terminalversion> terminalversions, Set<Userroletype> userroletypes, Set<Task> tasks, Set<Transactionhistory> transactionhistories, Set<Tmpauthrec> tmpauthrecs, Set<Transactions> transactionses, Set<Agentcategory> agentcategories, Set<Terminal> terminals, Set<Branch> branches, Set<Group> groups) {
       this.statuscode = statuscode;
       this.statuscategory = statuscategory;
       this.createdtime = createdtime;
       this.description = description;
       this.lastupdatedtime = lastupdatedtime;
       this.lastupdateduser = lastupdateduser;
       this.sortkey = sortkey;
       this.usersesForPasswordstatus = usersesForPasswordstatus;
       this.passwordpolicies = passwordpolicies;
       this.usersesForStatus = usersesForStatus;
       this.clusters = clusters;
       this.terminalmodels = terminalmodels;
       this.agentparams = agentparams;
       this.pages = pages;
       this.agentuserbatches = agentuserbatches;
       this.units = units;
       this.transactiontypes = transactiontypes;
       this.agents = agents;
       this.agentusers = agentusers;
       this.userroles = userroles;
       this.sections = sections;
       this.members = members;
       this.terminalversions = terminalversions;
       this.userroletypes = userroletypes;
       this.tasks = tasks;
       this.transactionhistories = transactionhistories;
       this.tmpauthrecs = tmpauthrecs;
       this.transactionses = transactionses;
       this.agentcategories = agentcategories;
       this.terminals = terminals;
       this.branches = branches;
       this.groups = groups;
    }
   
     @Id 

    
    @Column(name="STATUSCODE", unique=true, nullable=false, length=16)
    public String getStatuscode() {
        return this.statuscode;
    }
    
    public void setStatuscode(String statuscode) {
        this.statuscode = statuscode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUSCATEGORYCODE")
    public Statuscategory getStatuscategory() {
        return this.statuscategory;
    }
    
    public void setStatuscategory(Statuscategory statuscategory) {
        this.statuscategory = statuscategory;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

    
    @Column(name="DESCRIPTION", length=64)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    
    @Column(name="SORTKEY")
    public Short getSortkey() {
        return this.sortkey;
    }
    
    public void setSortkey(Short sortkey) {
        this.sortkey = sortkey;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="statusByPasswordstatus")
    public Set<Users> getUsersesForPasswordstatus() {
        return this.usersesForPasswordstatus;
    }
    
    public void setUsersesForPasswordstatus(Set<Users> usersesForPasswordstatus) {
        this.usersesForPasswordstatus = usersesForPasswordstatus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Passwordpolicy> getPasswordpolicies() {
        return this.passwordpolicies;
    }
    
    public void setPasswordpolicies(Set<Passwordpolicy> passwordpolicies) {
        this.passwordpolicies = passwordpolicies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="statusByStatus")
    public Set<Users> getUsersesForStatus() {
        return this.usersesForStatus;
    }
    
    public void setUsersesForStatus(Set<Users> usersesForStatus) {
        this.usersesForStatus = usersesForStatus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Cluster> getClusters() {
        return this.clusters;
    }
    
    public void setClusters(Set<Cluster> clusters) {
        this.clusters = clusters;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Terminalmodel> getTerminalmodels() {
        return this.terminalmodels;
    }
    
    public void setTerminalmodels(Set<Terminalmodel> terminalmodels) {
        this.terminalmodels = terminalmodels;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Agentparam> getAgentparams() {
        return this.agentparams;
    }
    
    public void setAgentparams(Set<Agentparam> agentparams) {
        this.agentparams = agentparams;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Page> getPages() {
        return this.pages;
    }
    
    public void setPages(Set<Page> pages) {
        this.pages = pages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Agentuserbatch> getAgentuserbatches() {
        return this.agentuserbatches;
    }
    
    public void setAgentuserbatches(Set<Agentuserbatch> agentuserbatches) {
        this.agentuserbatches = agentuserbatches;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Unit> getUnits() {
        return this.units;
    }
    
    public void setUnits(Set<Unit> units) {
        this.units = units;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Transactiontype> getTransactiontypes() {
        return this.transactiontypes;
    }
    
    public void setTransactiontypes(Set<Transactiontype> transactiontypes) {
        this.transactiontypes = transactiontypes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Agent> getAgents() {
        return this.agents;
    }
    
    public void setAgents(Set<Agent> agents) {
        this.agents = agents;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Agentuser> getAgentusers() {
        return this.agentusers;
    }
    
    public void setAgentusers(Set<Agentuser> agentusers) {
        this.agentusers = agentusers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Userrole> getUserroles() {
        return this.userroles;
    }
    
    public void setUserroles(Set<Userrole> userroles) {
        this.userroles = userroles;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Section> getSections() {
        return this.sections;
    }
    
    public void setSections(Set<Section> sections) {
        this.sections = sections;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Member> getMembers() {
        return this.members;
    }
    
    public void setMembers(Set<Member> members) {
        this.members = members;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Terminalversion> getTerminalversions() {
        return this.terminalversions;
    }
    
    public void setTerminalversions(Set<Terminalversion> terminalversions) {
        this.terminalversions = terminalversions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Userroletype> getUserroletypes() {
        return this.userroletypes;
    }
    
    public void setUserroletypes(Set<Userroletype> userroletypes) {
        this.userroletypes = userroletypes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Task> getTasks() {
        return this.tasks;
    }
    
    public void setTasks(Set<Task> tasks) {
        this.tasks = tasks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Transactionhistory> getTransactionhistories() {
        return this.transactionhistories;
    }
    
    public void setTransactionhistories(Set<Transactionhistory> transactionhistories) {
        this.transactionhistories = transactionhistories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Tmpauthrec> getTmpauthrecs() {
        return this.tmpauthrecs;
    }
    
    public void setTmpauthrecs(Set<Tmpauthrec> tmpauthrecs) {
        this.tmpauthrecs = tmpauthrecs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Transactions> getTransactionses() {
        return this.transactionses;
    }
    
    public void setTransactionses(Set<Transactions> transactionses) {
        this.transactionses = transactionses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Agentcategory> getAgentcategories() {
        return this.agentcategories;
    }
    
    public void setAgentcategories(Set<Agentcategory> agentcategories) {
        this.agentcategories = agentcategories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Terminal> getTerminals() {
        return this.terminals;
    }
    
    public void setTerminals(Set<Terminal> terminals) {
        this.terminals = terminals;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Branch> getBranches() {
        return this.branches;
    }
    
    public void setBranches(Set<Branch> branches) {
        this.branches = branches;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="status")
    public Set<Group> getGroups() {
        return this.groups;
    }
    
    public void setGroups(Set<Group> groups) {
        this.groups = groups;
    }




}


